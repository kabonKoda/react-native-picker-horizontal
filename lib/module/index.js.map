{"version":3,"sources":["index.tsx"],"names":["React","useState","View","Text","TouchableWithoutFeedback","Animated","Platform","props","data","renderItem","itemWidth","style","passToFlatList","onChange","passedProps","scrollX","useRef","Value","current","fixed","timeoutFixPosition","setTimeout","flatListRef","paddingSide","setPaddingSide","onLayoutScrollView","e","width","nativeEvent","layout","onLayout","initialIndex","scrollToIndex","animated","index","onMomentumScrollBegin","clearTimeout","onMomentumScrollEnd","contentOffset","x","selected","Math","round","changePosition","onScrollBeginDrag","onScrollEndDrag","position","fixedPosition","length","OS","display","height","top","left","right","bottom","justifyContent","alignItems","mark","DefaultMark","process","env","NODE_ENV","event","useNativeDriver","_item","toString","paddingHorizontal","backgroundColor","item","interpolateScale","interpolateOpacity","scale","interpolate","defaultScaleConfig","opacity","defaultOpacityConfig","transform","color","fontWeight","paddingTop","inputRange","outputRange"],"mappings":";;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACEC,IADF,EAEEC,IAFF,EAIEC,wBAJF,EAQEC,QARF,EASEC,QATF,QAUO,cAVP;AA2BA,gBAAgBC,KAAD,IAAkB;AAC/B,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,KAAK,GAAG,EAJJ;AAKJC,IAAAA,cAAc,GAAG,EALb;AAMJC,IAAAA,QANI;AAOJ,OAAGC;AAPC,MAQFP,KARJ;AAUA,QAAMQ,OAAO,GAAGf,KAAK,CAACgB,MAAN,CAAa,IAAIX,QAAQ,CAACY,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAApD;AACA,MAAIC,KAAK,GAAGnB,KAAK,CAACgB,MAAN,CAAa,KAAb,EAAoBE,OAAhC;AACA,MAAIE,kBAAkB,GAAGpB,KAAK,CAACgB,MAAN,CAAaK,UAAU,CAAC,MAAM,CACtD,CAD+C,EAC7C,CAD6C,CAAvB,EAClBH,OADP;AAEA,QAAMI,WAAW,GAAGtB,KAAK,CAACgB,MAAN,CAAa,IAAb,CAApB;AACA,MAAI,CAACO,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMwB,kBAAkB,GAAIC,CAAD,IAA0B;AACnD,UAAM;AAACC,MAAAA;AAAD,QAAUD,CAAC,CAACE,WAAF,CAAcC,MAA9B;AACA,UAAM;AAACnB,MAAAA,SAAD;AAAYoB,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAAsCxB,KAA5C;AACAiB,IAAAA,cAAc,CAAC,CAACG,KAAK,GAAGjB,SAAT,IAAsB,CAAvB,CAAd;;AAEA,QAAIoB,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,MAAAA,QAAQ,CAACJ,CAAD,CAAR;AACD;;AACD,QAAIK,YAAJ,EAAkB;AAChB,UAAIT,WAAW,IAAIA,WAAW,CAACJ,OAA/B,EAAwC;AACtC;AACAI,QAAAA,WAAW,CAACJ,OAAZ,CAAoBc,aAApB,CAAkC;AAACC,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,KAAK,EAAE,KAAKH;AAA9B,SAAlC;AACD;AACF;AACF,GAdD;;AAgBA,QAAMI,qBAAqB,GAAG,MAAM;AAClChB,IAAAA,KAAK,GAAG,KAAR;AACAiB,IAAAA,YAAY,CAAChB,kBAAD,CAAZ;AACD,GAHD;;AAKA,QAAMiB,mBAAmB,GAAG,CAAC;AAACT,IAAAA,WAAW,EAAE;AAACU,MAAAA,aAAa,EAAE;AAACC,QAAAA;AAAD;AAAhB;AAAd,GAAD,KAAkF;AAC5G,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG7B,SAAf,CAAjB;AACAiC,IAAAA,cAAc,CAACH,QAAD,CAAd;AACD,GAHD;;AAKA,QAAMI,iBAAiB,GAAG,MAAM;AAC9BzB,IAAAA,KAAK,GAAG,KAAR;AACAiB,IAAAA,YAAY,CAAChB,kBAAD,CAAZ;AACD,GAHD;;AAKA,QAAMyB,eAAe,GAAG,MAAM;AAC5BT,IAAAA,YAAY,CAAChB,kBAAD,CAAZ;AACD,GAFD;;AAIA,QAAMuB,cAAc,GAAIG,QAAD,IAAsB;AAC3C,QAAIC,aAAa,GAAGD,QAApB;;AACA,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBC,MAAAA,aAAa,GAAG,CAAhB;AACD;;AACD,QAAID,QAAQ,GAAGtC,IAAI,CAACwC,MAAL,GAAc,CAA7B,EAAgC;AAC9BD,MAAAA,aAAa,GAAGvC,IAAI,CAACwC,MAAL,GAAc,CAA9B;AACD;;AAED,QAAInC,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACkC,aAAD,CAAR;AACD;;AACDX,IAAAA,YAAY,CAAChB,kBAAD,CAAZ;AACAA,IAAAA,kBAAkB,GAAGC,UAAU,CAAC,YAAY;AAC1C,UAAI,CAACF,KAAD,IAAUG,WAAV,IAAyBA,WAAW,CAACJ,OAAzC,EAAkD;AAChDC,QAAAA,KAAK,GAAG,IAAR,CADgD,CAEhD;;AACAG,QAAAA,WAAW,CAACJ,OAAZ,CAAoBc,aAApB,CAAkC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,KAAK,EAAE,KAAKa;AAA7B,SAAlC;AACD;AACF,KAN8B,EAM5BzC,QAAQ,CAAC2C,EAAT,IAAe,KAAf,GAAuB,EAAvB,GAA4B,CANA,CAA/B;AAOD,GApBD;;AAsBA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,MAAM,EAAE,MAA1B;AAAkC,SAAGxC;AAArC;AAAb,KAA8DG,WAA9D,gBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACXgC,MAAAA,QAAQ,EAAE,UADC;AACWM,MAAAA,GAAG,EAAE,CADhB;AACmBC,MAAAA,IAAI,EAAE,CADzB;AAC4BC,MAAAA,KAAK,EAAE,CADnC;AACsCC,MAAAA,MAAM,EAAE,CAD9C;AACiDC,MAAAA,cAAc,EAAE,QADjE;AAC2EC,MAAAA,UAAU,EAAE;AADvF;AAAb,KAGG,OAAOlD,KAAK,CAACmD,IAAb,KAAsB,WAAtB,GAAoCC,WAApC,GAAkDpD,KAAK,CAACmD,IAH3D,CADF,eAME,oBAAC,QAAD,CAAU,QAAV;AACE,IAAA,GAAG,EAAEE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,GAAkC,IAAlC,GAAyCxC,WADhD;AAEE,IAAA,QAAQ,EAAEG,kBAFZ;AAGE,IAAA,QAAQ,EAAEpB,QAAQ,CAAC0D,KAAT,CAAe,CAAC;AAACnC,MAAAA,WAAW,EAAE;AAACU,QAAAA,aAAa,EAAE;AAACC,UAAAA,CAAC,EAAExB;AAAJ;AAAhB;AAAd,KAAD,CAAf,EACR;AAACiD,MAAAA,eAAe,EAAE;AAAlB,KADQ,CAHZ;AAKE,IAAA,UAAU,EAAE,IALd;AAME,IAAA,8BAA8B,EAAE,KANlC;AAOE,IAAA,IAAI,EAAExD,IAPR;AAQE,IAAA,YAAY,EAAE,CAACyD,KAAD,EAAQ/B,KAAR,KAAkBA,KAAK,CAACgC,QAAN,EARlC;AASE,IAAA,qBAAqB,EAAE/B,qBATzB;AAUE,IAAA,mBAAmB,EAAEE,mBAVvB;AAWE,IAAA,iBAAiB,EAAEO,iBAXrB;AAYE,IAAA,eAAe,EAAEC,eAZnB;AAaE,IAAA,qBAAqB,EAAE;AACrBsB,MAAAA,iBAAiB,EAAE5C,WADE;AACW2B,MAAAA,OAAO,EAAE,MADpB;AAC4BO,MAAAA,UAAU,EAAE,QADxC;AACkDW,MAAAA,eAAe,EAAE;AADnE,KAbzB;AAgBE,IAAA,kBAAkB,EAAE;AAhBtB,KAiBMxD,cAjBN;AAkBE,IAAA,UAAU,EAAE,CAAC;AAACyD,MAAAA,IAAD;AAAOnC,MAAAA;AAAP,KAAD,KAAmB;AAC7B,YAAM;AAACxB,QAAAA,SAAD;AAAY4D,QAAAA,gBAAZ;AAA8BC,QAAAA;AAA9B,UAAoDhE,KAA1D;AAEA,YAAMiE,KAAK,GAAGzD,OAAO,CAAC0D,WAAR,CAAoBH,gBAAgB,GAChDA,gBAAgB,CAACpC,KAAD,EAAQxB,SAAR,CADgC,GAEhDgE,kBAAkB,CAACxC,KAAD,EAAQxB,SAAR,CAFN,CAAd;AAIA,YAAMiE,OAAO,GAAG5D,OAAO,CAAC0D,WAAR,CAAoBF,kBAAkB,GACpDA,kBAAkB,CAACrC,KAAD,EAAQxB,SAAR,CADkC,GAEpDkE,oBAAoB,CAAC1C,KAAD,EAAQxB,SAAR,CAFN,CAAhB;AAIA,0BACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,MAAM;AACvC,cAAIY,WAAW,IAAIA,WAAW,CAACJ,OAA/B,EAAwC;AACtCC,YAAAA,KAAK,GAAG,IAAR,CADsC,CAEtC;;AACAG,YAAAA,WAAW,CAACJ,OAAZ,CAAoBc,aAApB,CAAkC;AAACC,cAAAA,QAAQ,EAAE,IAAX;AAAiBC,cAAAA,KAAK,EAAE,KAAKA;AAA7B,aAAlC;AACD;;AACD,cAAIrB,QAAJ,EAAc;AAAEA,YAAAA,QAAQ,CAACqB,KAAD,CAAR;AAAkB;AACnC,SAPD;AAOG,QAAA,GAAG,EAAEA;AAPR,sBAQE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE;AAAC2C,UAAAA,SAAS,EAAE,CAAC;AAACL,YAAAA;AAAD,WAAD,CAAZ;AAAuBG,UAAAA;AAAvB;AAAtB,SACGlE,UAAU,CAAC4D,IAAD,EAAOnC,KAAP,CADb,CARF,CADF;AAcD;AA3CH,KANF,CADF;AAqDD,CAhID;AAkIA,MAAMyB,WAAW,gBACf,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AACXmB,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,UAAU,EAAE,MAFD;AAGXC,IAAAA,UAAU,EAAE;AAHD;AAAb,OADF;;AAOA,MAAMN,kBAAkB,GAAG,CAACxC,KAAD,EAAgBxB,SAAhB,MAAuC;AAChEuE,EAAAA,UAAU,EAAE,CACVvE,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CADC,EAEVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CAFC,EAGVxB,SAAS,GAAGwB,KAHF,EAIVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CAJC,EAKVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CALC,CADoD;AAQhEgD,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB;AARmD,CAAvC,CAA3B;;AAWA,MAAMN,oBAAoB,GAAG,CAAC1C,KAAD,EAAgBxB,SAAhB,MAAuC;AAClEuE,EAAAA,UAAU,EAAE,CACVvE,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CADC,EAEVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CAFC,EAGVxB,SAAS,GAAGwB,KAHF,EAIVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CAJC,EAKVxB,SAAS,IAAIwB,KAAK,GAAG,CAAZ,CALC,CADsD;AAQlEgD,EAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,EAAc,GAAd,EAAmB,GAAnB;AARqD,CAAvC,CAA7B","sourcesContent":["import React, {ReactNode, useState} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollViewProps,\r\n  TouchableWithoutFeedback,\r\n  LayoutChangeEvent,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  Animated,\r\n  Platform\r\n} from 'react-native';\r\n\r\n\r\nexport interface Props extends ScrollViewProps {\r\n  data: any[],\r\n  renderItem: (item: any, index: number) => ReactNode,\r\n  itemWidth: number,\r\n  initialIndex?: number,\r\n  onChange?: (position: number) => void,\r\n  mark?: ReactNode | null,\r\n  interpolateScale?: (index: number, itemWidth: number) => Animated.InterpolationConfigType,\r\n  interpolateOpacity?: (index: number, itemWidth: number) => Animated.InterpolationConfigType\r\n  style?: object,\r\n  passToFlatList?: object\r\n}\r\n\r\n\r\nexport default (props: Props) => {\r\n  const {\r\n    data,\r\n    renderItem,\r\n    itemWidth,\r\n    style = {},\r\n    passToFlatList = {},\r\n    onChange,\r\n    ...passedProps\r\n  } = props;\r\n\r\n  const scrollX = React.useRef(new Animated.Value(0)).current;\r\n  let fixed = React.useRef(false).current;\r\n  let timeoutFixPosition = React.useRef(setTimeout(() => {\r\n  }, 0)).current;\r\n  const flatListRef = React.useRef(null);\r\n  let [paddingSide, setPaddingSide] = useState(0);\r\n\r\n  const onLayoutScrollView = (e: LayoutChangeEvent) => {\r\n    const {width} = e.nativeEvent.layout;\r\n    const {itemWidth, onLayout, initialIndex} = props;\r\n    setPaddingSide((width - itemWidth) / 2);\r\n\r\n    if (onLayout != null) {\r\n      onLayout(e);\r\n    }\r\n    if (initialIndex) {\r\n      if (flatListRef && flatListRef.current) {\r\n        // @ts-ignore\r\n        flatListRef.current.scrollToIndex({animated: false, index: \"\" + initialIndex});\r\n      }\r\n    }\r\n  }\r\n\r\n  const onMomentumScrollBegin = () => {\r\n    fixed = false;\r\n    clearTimeout(timeoutFixPosition);\r\n  }\r\n\r\n  const onMomentumScrollEnd = ({nativeEvent: {contentOffset: {x}}}: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n    const selected = Math.round(x / itemWidth);\r\n    changePosition(selected);\r\n  }\r\n\r\n  const onScrollBeginDrag = () => {\r\n    fixed = false;\r\n    clearTimeout(timeoutFixPosition);\r\n  }\r\n\r\n  const onScrollEndDrag = () => {\r\n    clearTimeout(timeoutFixPosition);\r\n  }\r\n\r\n  const changePosition = (position: number) => {\r\n    let fixedPosition = position;\r\n    if (position < 0) {\r\n      fixedPosition = 0;\r\n    }\r\n    if (position > data.length - 1) {\r\n      fixedPosition = data.length - 1;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(fixedPosition);\r\n    }\r\n    clearTimeout(timeoutFixPosition);\r\n    timeoutFixPosition = setTimeout(function () {\r\n      if (!fixed && flatListRef && flatListRef.current) {\r\n        fixed = true;\r\n        // @ts-ignore\r\n        flatListRef.current.scrollToIndex({animated: true, index: \"\" + fixedPosition});\r\n      }\r\n    }, Platform.OS == \"ios\" ? 50 : 0);\r\n  }\r\n\r\n  return (\r\n    <View style={{display: \"flex\", height: \"100%\", ...style}} {...passedProps}>\r\n      <View style={{\r\n        position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, justifyContent: 'center', alignItems: 'center'\r\n      }}>\r\n        {typeof props.mark === \"undefined\" ? DefaultMark : props.mark}\r\n      </View>\r\n      <Animated.FlatList\r\n        ref={process.env.NODE_ENV === 'test' ? null : flatListRef}\r\n        onLayout={onLayoutScrollView}\r\n        onScroll={Animated.event([{nativeEvent: {contentOffset: {x: scrollX}}}],\r\n          {useNativeDriver: true})}\r\n        horizontal={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        data={data}\r\n        keyExtractor={(_item, index) => index.toString()}\r\n        onMomentumScrollBegin={onMomentumScrollBegin}\r\n        onMomentumScrollEnd={onMomentumScrollEnd}\r\n        onScrollBeginDrag={onScrollBeginDrag}\r\n        onScrollEndDrag={onScrollEndDrag}\r\n        contentContainerStyle={{\r\n          paddingHorizontal: paddingSide, display: \"flex\", alignItems: \"center\", backgroundColor: 'transparent'\r\n        }}\r\n        initialNumToRender={30}\r\n        {...passToFlatList}\r\n        renderItem={({item, index}) => {\r\n          const {itemWidth, interpolateScale, interpolateOpacity} = props;\r\n\r\n          const scale = scrollX.interpolate(interpolateScale ?\r\n            interpolateScale(index, itemWidth) :\r\n            defaultScaleConfig(index, itemWidth));\r\n\r\n          const opacity = scrollX.interpolate(interpolateOpacity ?\r\n            interpolateOpacity(index, itemWidth) :\r\n            defaultOpacityConfig(index, itemWidth));\r\n\r\n          return (\r\n            <TouchableWithoutFeedback onPress={() => {\r\n              if (flatListRef && flatListRef.current) {\r\n                fixed = true;\r\n                // @ts-ignore\r\n                flatListRef.current.scrollToIndex({animated: true, index: \"\" + index});\r\n              }\r\n              if (onChange) { onChange(index); }\r\n            }} key={index}>\r\n              <Animated.View style={{transform: [{scale}], opacity}}>\r\n                {renderItem(item, index)}\r\n              </Animated.View>\r\n            </TouchableWithoutFeedback>\r\n          )\r\n        }} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst DefaultMark =\r\n  <Text style={{\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    paddingTop: 60\r\n  }}>^</Text>;\r\n\r\nconst defaultScaleConfig = (index: number, itemWidth: number) => ({\r\n  inputRange: [\r\n    itemWidth * (index - 2),\r\n    itemWidth * (index - 1),\r\n    itemWidth * index,\r\n    itemWidth * (index + 1),\r\n    itemWidth * (index + 2),\r\n  ],\r\n  outputRange: [1, 1.5, 2.2, 1.5, 1]\r\n});\r\n\r\nconst defaultOpacityConfig = (index: number, itemWidth: number) => ({\r\n  inputRange: [\r\n    itemWidth * (index - 2),\r\n    itemWidth * (index - 1),\r\n    itemWidth * index,\r\n    itemWidth * (index + 1),\r\n    itemWidth * (index + 2),\r\n  ],\r\n  outputRange: [0.7, 0.9, 1, 0.9, 0.7]\r\n});\r\n"]}